<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1605035_event_0.EventUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>EventUtils</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var EventUtils = Class.create();
EventUtils.prototype = {
    initialize: function() {
        this.eventTable = 'x_1605035_event_0_event_record';
    },

    getEventDetails: function(eventId) {
        var eventGR = new GlideRecordSecure(this.eventTable);
        eventGR.addQuery('sys_id', eventId);
        eventGR.query();
        if (eventGR.next()) {
            return this.mapEventFields(eventGR);
        }
        return null;
    },

    isEventVIP: function(eventId) {
        var eventGR = new GlideRecordSecure(this.eventTable);
        eventGR.addQuery('sys_id', eventId);
        eventGR.query();
        if (eventGR.next()) {
            return eventGR.vip.toString() == 'true';
        }
        return false;
    },

    calculateRemainingBudget: function(eventId) {
        return new BudgetUtils().calculateRemainingBudget(eventId);
    },

    getEventTasks: function(eventId) {
        return new TaskUtils().getTasksForEvent(eventId);
    },

    getEventAttendees: function(eventId) {
        return new AttendeeUtils().getAttendeesByEvent(eventId);
    },

    getEventVendors: function(eventId) {
        return new VendorUtils().getVendorsByEvent(eventId);
    },

    getEventBudgetDetails: function(eventId) {
        return new BudgetUtils().getBudgetDetailsByEvent(eventId);
    },

    getEventFeedback: function(eventId) {
        return new FeedbackUtils().getFeedbackByEvent(eventId);
    },

    mapEventFields: function(eventGR) {
        return {
            sysId: eventGR.getUniqueValue(),
            eventName: eventGR.getValue('event_name'),
            eventDate: eventGR.getValue('event_date'),
            location: eventGR.getValue('location'),
            vip: eventGR.vip.toString() == 'true',
            status: eventGR.getValue('status')
        };
    },

    type: 'EventUtils'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-02 20:04:43</sys_created_on>
        <sys_id>3f05a569c384221084a4f5fc05013158</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>EventUtils</sys_name>
        <sys_package display_value="Event Management &amp;amp; Planning System" source="x_1605035_event_0">5dec9985c300221084a4f5fc050131e6</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Event Management &amp;amp; Planning System">5dec9985c300221084a4f5fc050131e6</sys_scope>
        <sys_update_name>sys_script_include_3f05a569c384221084a4f5fc05013158</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-02 20:09:45</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>3f05a569c384221084a4f5fc05013158</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-02 20:04:42</sys_created_on>
        <sys_id>5195ad29c384221084a4f5fc050131a4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-02 20:04:42</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
